name: Release

on:
  push:
    branches:
      - master
    tags:
      - 'v[0-9]+.[0-9]+.[0-9]+'
      - '[0-9]+.[0-9]+.[0-9]+rc[0-9]+'

jobs:
  build:
    name: build-${{ matrix.config.os }}
    runs-on: ${{ matrix.config.os }}-latest
    if: startsWith(github.ref, 'refs/tags')
    strategy:
      fail-fast: false
      matrix:
        config:
          - os: ubuntu
            conan_cache: /home/runner/.conan2
            extension: ""
          - os: macos
            conan_cache: /Users/runner/.conan2
            extension: ""
          # - os: windows
          #   conan_cache: C:\Users\runneradmin\.conan2
          #   extension: .exe
    steps:
    - uses: actions/checkout@v4

    # Conan deps are cached in different locations depending on OS
    - name: Cache Conan dependencies - ${{ matrix.config.os }}
      uses: actions/cache@v2
      with:
        path: ${{ matrix.config.conan_cache }}
        key: build-${{ matrix.config.os }}-cache-conan

    # Cache python deps for slower windows install
    - name: Cache pip dependencies - ${{ matrix.config.os }}
      if: startsWith(matrix.config.os, 'windows')
      uses: actions/cache@v2
      with:
        path: c:\users\runneradmin\appdata\local\pip\cache
        key: build-${{ matrix.config.os }}-cache-pip

    # Install dependencies
    - uses: actions/setup-python@v5
      with:
        python-version: '3.10'
    - name: Install dependencies
      run: pip install cmake ninja conan && make install

    # Build package
    - name: Build release package - ${{ matrix.config.os }}
      run: make prod

    # Test package
    - name: Test
      run: make test-prod

    # Binary artifact
    - name: Rename binary
      run: mkdir release && mv build/Prod/sf3convert${{ matrix.config.extension }} release/sf3convert-${{ matrix.config.os }}${{ matrix.config.extension }}
    - name: Save binary artifact for release
      uses: actions/upload-artifact@v4
      with:
        name: ${{ matrix.config.os }}-sf3convert
        path: release

  release:
    name: release
    runs-on: ubuntu-latest
    needs: build
    if: startsWith(github.ref, 'refs/tags')
    steps:
    # Download release artifacts
    - name: Download and extract artifacts
      uses: actions/download-artifact@v4
      with:
        path: build.release

    # Release
    - name: Release
      uses: softprops/action-gh-release@v2
      with:
        draft: true
        fail_on_unmatched_files: true
        files: release/*
